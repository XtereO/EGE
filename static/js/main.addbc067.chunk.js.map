{"version":3,"sources":["UI/Article/EgeChoice/EgeChoice.tsx","logo.svg","DAL/Api.ts","BLL/Reducers/headerReducer.ts","BLL/Selectors/headerSelector.ts","UI/Header/Header.tsx","BLL/Reducers/egeChoiceReducer.ts","BLL/Reducers/egeResultReducer.ts","BLL/Reducers/egeVariantReducer.ts","BLL/Reducers/preResultReducer.ts","BLL/Reducers/singleQuestionReducer.ts","BLL/Reducers/materialReducer.ts","BLL/store.ts","BLL/Selectors/egeChoiceSelector.ts","UI/Bricks/Pagination.tsx","UI/Article/EgeChoice/NumberUI.tsx","UI/Article/EgeChoice/FormChoice.tsx","BLL/Selectors/egeResultSelector.ts","UI/Article/EgeResult/BarResult.tsx","UI/Article/EgeResult/ResultPage.tsx","BLL/Selectors/egeVariantSelector.ts","UI/Article/EgeVariant/VariantQuestion.tsx","UI/Article/EgeVariant/FormVariant.tsx","UI/Article/EgeVariant/TrainQuestion.tsx","UI/Article/EgeVariant/EgeVariantPage.tsx","BLL/Selectors/preResultSelector.ts","UI/Article/preResult/BenchmarkUI.tsx","UI/Article/preResult/QuestionUIB.tsx","UI/Article/preResult/PreResultForm.tsx","UI/Article/preResult/PreResultPage.tsx","BLL/Selectors/singleQuestionSelector.ts","UI/Article/SingleQuestion/SingleQuestion.tsx","BLL/Selectors/materialSelector.ts","UI/Article/Material/Material.tsx","UI/Article/root.tsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","withCredentials","baseURL","headers","getQuestions","numberQuest","categoryId","page","page_size","sortByDifficult","get","getRandomQuestions","getQuestion","id","getVariants","currentObject","getMaterial","SET_OBJECTS","SET_CURRENT_OBJECT","initialState","objects","title","setCurrentObject","type","objectsSelector","state","header","currentObjectSelector","Header","props","useSelector","dispatch","useDispatch","history","useHistory","onClick","e","filter","o","target","useEffect","a","response","data","myURL","URLSearchParams","location","search","Navbar","sticky","variant","bg","expand","collapseOnSelect","Brand","style","color","textDecoration","to","Toggle","aria-controls","Collapse","Nav","className","map","Link","String","SET_NUMBERS","SET_PAGE_VARIANTS","numbers","variants","pageVariant","totalCount","setVariants","SET_RESULT","questions","A","B","result","maxResult","setResult","isToZero","SET_VARIANT","numberVariant","mode","sort","setVariant","setQuestionThunk","filters","c","length","ans","number","categorys","count","results","tryed","Math","floor","ost","i","r","round","random","SET_QUESTION","points","benchmarks","difficult","introduction","firstAsk","secondAsk","thirdAsk","imgForAsk","imgForAns","fistInstruction","secondInstuction","thirdIntroduction","firstAnswer","secondAnwer","thirdAnswer","addition","source","source_link","setQuestion","question","SET_MATERIAL","text","imgMaterial","rootReducer","combineReducers","mainPage","action","resultPage","res","forEach","rightAns","split","trim","toLowerCase","anotherAns","q","index","b","maxPoints","variantPage","preResultPage","singleQuestionPage","material","store","createStore","applyMiddleware","thunkMiddleware","numbersSelector","variantsSelector","totalCountSelector","Pagination","pS","onSubmit","link","push","pathname","innerText","useState","pN","setPn","buttons","behavior","Button","active","ButtonGroup","size","aria-label","Number","editMode","setEditMode","borderBottom","borderRadius","paddingBottom","marginTop","paddingLeft","xmlns","width","height","fill","viewBox","fill-rule","d","parse","disabled","value","maxHeight","name","handleChange","backgroundColor","border","outline","textAlign","onChange","slice","OverlayTrigger","placement","overlay","Tooltip","htmlFor","valuesCategory","defaultChecked","FormChoiceWithFormik","objCategorys","obj","changeItems","el","object","newCategory","Object","assign","enableReinitialize","initialValues","values","myObj","key","f","submitForm","handleSubmit","myNumbers","cat","fontSize","EgeChoice","item","setNumbersThunk","v","variantNumber","questionsSelector","resultSelector","maxResultSelector","BarResult","numberQuestion","countRightAns","checkAnswer","ResultPage","questionsA","questionsB","questionsVariantSelector","modeSelector","pageVariantSelector","VariantQuestion","src","placeholder","FormVariant","questionValues","questionsRaw","newQ","questionUIVariant","TrainQuestion","showAnswer","setShow","href","EgeVariantPage","setSort","category","resultSort","undefined","setTrainQuestionThunk","idVariant","myTotalCount","questionUITest","ceil","questionsPreResultSelector","BenchmarkUI","QuestionUIB","options","PreResultForm","myValues","newObj","Benchmarks","PreResultPage","singleQuestionSelector","SingleQuestion","nativeProps","zeroQuestion","materialSelector","Material","setMaterialThunk","Article","path","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.addbc067.chunk.js","sourcesContent":["import React,{useEffect, useState} from \"react\"\r\nimport { ButtonGroup,Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setNumbersThunk, setVariantsThunk } from \"../../../BLL/Reducers/egeChoiceReducer\"\r\nimport { totalCountSelector,variantsSelector,numbersSelector } from \"../../../BLL/Selectors/egeChoiceSelector\"\r\nimport { NumberType, VariantType } from \"../../../Types/Types\"\r\nimport { Pagination } from \"../../Bricks/Pagination\"\r\nimport { Number } from \"./NumberUI\";\r\nimport { FormChoiceWithFormik } from \"./FormChoice\"\r\nimport {setQuestionThunk} from '../../../BLL/Reducers/egeVariantReducer'\r\nimport { currentObjectSelector } from \"../../../BLL/Selectors/headerSelector\"\r\n\r\ntype PropsType = {}\r\n\r\nexport const EgeChoice: React.FC<PropsType> = (props) => {\r\n    \r\n    const dispatch=useDispatch()\r\n    const totalCount=useSelector(totalCountSelector)\r\n    const variants=useSelector(variantsSelector)\r\n    const numbers=useSelector(numbersSelector)\r\n    const currentObject=useSelector(currentObjectSelector)\r\n\r\n    useEffect(()=>{\r\n        dispatch(setVariantsThunk(1,currentObject ? currentObject.id : 1))\r\n        dispatch(setNumbersThunk(currentObject ? currentObject.id : 1))\r\n    },[currentObject])\r\n\r\n    return <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 text-center\">\r\n                <h2>Наши варианты</h2>\r\n            </div>\r\n            <div className=\"col-md-6 center\">\r\n                <div className=\"\">\r\n                    <Pagination totalCount={totalCount} behavior={false}\r\n                    pS={5} page={totalCount} link={\"/variant\"}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h2>Составить собственный вариант</h2>\r\n            <div>\r\n                <FormChoiceWithFormik changeItems={numbers} submitForm={setQuestionThunk}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nlet v:VariantType[]=[]\r\nfor(let i=103;i>0;i--){\r\n    v.push({\r\n            id: i,\r\n            variantNumber: i,\r\n            questions: []\r\n        })\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\";\r\nimport { MaterialType, NumberType, ObjectType, QuestionType, VariantDetailType, VariantType } from \"../Types/Types\";\r\n\r\n\r\nconst instance=axios.create({\r\n    withCredentials:true,\r\n    baseURL:\"http://a0535206.xsph.ru/api/\",\r\n    headers:{\r\n        withCredentials:true\r\n    }\r\n})\r\n\r\nexport const getNumbers=(currentObject:number)=>{\r\n    return instance.get<NumberType[]>(`numbers?item=${currentObject}`)\r\n}\r\ntype GetQuestionsType={\r\n    count:number\r\n    next:null | string\r\n    previous:null | string\r\n    results:QuestionType[]\r\n}\r\ntype GetVariantType={\r\n    count:number\r\n    next:null | string\r\n    previous:null | string\r\n    results:VariantType[]\r\n}\r\nexport const getQuestions=(numberQuest?:number,categoryId=0,page=1,page_size=0,sortByDifficult=null as null | boolean)=>{\r\n    return instance.get<GetQuestionsType>(`questions?${numberQuest && `number=${numberQuest}`}&category=${categoryId>0 ? categoryId : \"\"}&page=${page}&page_size=${page_size>0 ? page_size : \"\"}&sort_difficult=${sortByDifficult}`)\r\n}\r\nexport const getRandomQuestions=(numberQuest?:number,categoryId=0 as number,page=1,page_size=0)=>{\r\n    return instance.get<GetQuestionsType>(`questions?number=${numberQuest}&category=${categoryId>0 ? categoryId : \"\"}&page=${page}&page_size=${page_size>0 ? page_size : \"\"}&randomize=true`)\r\n}\r\nexport const getQuestion=(id:number)=>{\r\n    return instance.get<QuestionType>(`question?id=${id}`)\r\n}\r\nexport const getVariants=(page:number=1,currentObject:number)=>{\r\n    return instance.get<GetVariantType>(`variants?page=${page}&item=${currentObject}`)\r\n}\r\nexport const getVariant=(id:number)=>{\r\n    return instance.get<VariantDetailType>(`variant?id=${id}`)\r\n}\r\nexport const getMaterial=(id:number)=>{\r\n  return instance.get<MaterialType>(`material?id=${id}`)\r\n}\r\nexport const getObjects=()=>{\r\n    return instance.get<ObjectType[]>(`items`)\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { getObjects } from \"../../DAL/Api\";\r\nimport { ObjectType } from \"../../Types/Types\";\r\nimport { AppStateType } from \"../store\";\r\n\r\ntype ThunkType=ThunkAction<Promise<void>,AppStateType,unknown,ActionType>\r\nconst SET_OBJECTS:\"headerReducer/SET_OBJECTS\"=\"headerReducer/SET_OBJECTS\"\r\nconst SET_CURRENT_OBJECT:\"headerReducer/SET_CURRENT_OBJECT\"=\"headerReducer/SET_CURRENT_OBJECT\"\r\n\r\nlet initialState={\r\n    objects:[{id:1,title:\"Math\"}] as ObjectType[],\r\n    currentObject:null as ObjectType | null\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetObjectsType | SetCurrentObjectType\r\n \r\nexport const headerReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_OBJECTS:\r\n            return{\r\n                ...state,\r\n                objects:[...action.objects]\r\n            }\r\n        case SET_CURRENT_OBJECT:\r\n            return{\r\n                ...state,\r\n                currentObject:action.currentObject\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SetCurrentObjectType={\r\n    type:typeof SET_CURRENT_OBJECT\r\n    currentObject:ObjectType\r\n}\r\nexport const setCurrentObject=(currentObject:ObjectType):SetCurrentObjectType=>{\r\n    return{\r\n        type:SET_CURRENT_OBJECT,\r\n        currentObject\r\n    }\r\n}\r\ntype SetObjectsType={\r\n    type:typeof SET_OBJECTS\r\n    objects:ObjectType[]\r\n}\r\nconst setObjects=(objects:ObjectType[]):SetObjectsType=>{\r\n    return{\r\n        type:SET_OBJECTS,\r\n        objects\r\n    }\r\n}\r\nexport const setObjectsThunk=()=>async (dispatch:Dispatch)=>{\r\n    let response = await getObjects()\r\n\r\n    dispatch(setObjects(response.data))\r\n}","import { AppStateType } from \"../store\"\r\n\r\n\r\n\r\nexport const objectsSelector=(state:AppStateType)=>{\r\n    return state.header.objects\r\n}\r\nexport const currentObjectSelector=(state:AppStateType)=>{\r\n    return state.header.currentObject\r\n}","import { Navbar,Nav } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { getObjects } from \"../../DAL/Api\";\r\nimport { setCurrentObject, setObjectsThunk } from \"../../BLL/Reducers/headerReducer\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { currentObjectSelector, objectsSelector } from \"../../BLL/Selectors/headerSelector\";\r\n\r\ntype PropsType={}\r\n\r\nexport let Header:React.FC<PropsType>=((props)=>{\r\n    \r\n    let objects=useSelector(objectsSelector)\r\n    let currentObject=useSelector(currentObjectSelector)\r\n    const dispatch=useDispatch()\r\n    let history=useHistory()\r\n\r\n    let onClick=(e:any)=>{\r\n        dispatch(setCurrentObject(objects.filter(o=>+(o.id)==e.target.id)[0]))\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        if(objects[0].title===\"Math\"){\r\n            dispatch(setObjectsThunk())\r\n        }\r\n        let myURL=new URLSearchParams(history.location.search)\r\n        if (myURL.get('object')){\r\n            //@ts-ignore\r\n            dispatch(setCurrentObject(objects.filter(o=>o.id==myURL.get('object'))[0]))\r\n        }else{\r\n        dispatch(setCurrentObject(objects[0]))}\r\n    },[objects])\r\n\r\n    return<Navbar sticky=\"top\" variant=\"dark\" bg=\"success\" expand=\"md\" collapseOnSelect>\r\n        <Navbar.Brand>\r\n            <NavLink style={{color:'white',textDecoration:'none'}} \r\n            to={`/main?object=${currentObject?.id}`}>\r\n                {currentObject?.title}\r\n            </NavLink>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n                {objects.map(o=>o.id!=currentObject?.id ? <Nav.Link className=\"center\"><NavLink to={`/main?object=${o.id}`} className=\"NavbarLink\">\r\n                    <span onClick={onClick} id={String(o.id)}>{o.title}</span>\r\n                </NavLink></Nav.Link> : \"\")}\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n})","\r\nimport { Dispatch } from \"redux\"\r\nimport { getNumbers, getVariants } from \"../../DAL/Api\"\r\nimport { NumberType, VariantType } from \"../../Types/Types\"\r\n\r\nconst SET_NUMBERS:\"egeChoiceReducer/SET_NUMBER\"=\"egeChoiceReducer/SET_NUMBER\"\r\nconst SET_PAGE_VARIANTS:\"egeChoiceReducer/SET_VARIANTS\"=\"egeChoiceReducer/SET_VARIANTS\"\r\n\r\nconst initialState={\r\n    numbers:[] as NumberType[],\r\n    variants:[] as VariantType[],\r\n    pageVariant:1 as number,\r\n    totalCount:0 as number\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionType = SetNumbersType | SetVariantsType\r\n\r\nexport const egeChoiceReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_NUMBERS:\r\n            return{...state,numbers:[...action.numbers]}\r\n        case SET_PAGE_VARIANTS:\r\n            return{...state,variants:[...action.variants],\r\n                pageVariant:action.page,\r\n                totalCount:action.totalCount\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SetVariantsType={\r\n    type:typeof SET_PAGE_VARIANTS\r\n    variants:VariantType[]\r\n    page:number\r\n    totalCount:number\r\n}\r\nconst setVariants=(variants:VariantType[],page:number,totalCount:number):SetVariantsType=>{\r\n    return{\r\n        type:SET_PAGE_VARIANTS,\r\n        variants,page,totalCount\r\n    }\r\n}\r\nexport const setVariantsThunk=(page:number,item:number)=>async (dispatch:Dispatch)=>{\r\n    let response = await getVariants(page,item)\r\n    \r\n    dispatch(setVariants(response.data.results,page,response.data.count))\r\n}\r\n\r\ntype SetNumbersType={\r\n    type:typeof SET_NUMBERS\r\n    numbers:NumberType[]\r\n}\r\nconst setNumbers=(numbers:NumberType[]):SetNumbersType=>{\r\n    return{\r\n        type:SET_NUMBERS,\r\n        numbers\r\n    }\r\n}\r\nexport const setNumbersThunk=(item:number)=>async (dispatch:Dispatch)=>{\r\n    let response = await getNumbers(item)\r\n\r\n    dispatch(setNumbers(response.data))\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nconst SET_RESULT:\"egeResultReducer/SET_RESULT\"=\"egeResultReducer/SET_RESULT\"\r\n\r\nexport type QuestionTypeA={\r\n    id:number\r\n    rightAns:string\r\n    anotherAns:string\r\n    numberQuestion:number\r\n}\r\nexport type QuestionTypeB={\r\n    id:number\r\n    points:number\r\n    maxPoints:number\r\n    numberQuestion:number\r\n}\r\ntype QuestionsType={\r\n    A:QuestionTypeA[]\r\n    B:QuestionTypeB[]\r\n}\r\nconst initialState={\r\n    questions:{\r\n        A:[] as QuestionTypeA[],\r\n        B:[] as QuestionTypeB[]\r\n    },\r\n    result:0 as number,\r\n    maxResult:0 as number\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetResultType\r\n\r\nexport const egeResultReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_RESULT:\r\n            if(action.isToZero){\r\n                return{\r\n                    ...state,questions:{\r\n                        A:[],\r\n                        B:[]\r\n                    },\r\n                    result:0,maxResult:0\r\n                }\r\n            }\r\n            let res=0\r\n            let maxResult=0\r\n\r\n            if(action.questions.A.length!==0){\r\n                action.questions.A.forEach(a=>{\r\n                    if(a.rightAns.split('!').length==1)\r\n                    {\r\n                        a.rightAns.trim().toLowerCase() == a.anotherAns.trim().toLowerCase() && res++;\r\n                        maxResult++\r\n                    }else{\r\n                        a.rightAns.split('!').forEach((q,index)=>{\r\n                            q==a.anotherAns[index] && res++;\r\n                            maxResult++\r\n                        })\r\n                    }\r\n                })\r\n            }else if(action.questions.B.length!==0){\r\n                action.questions.B.forEach(b=>{\r\n                    res=res+b.points\r\n                    maxResult=maxResult+b.maxPoints\r\n                })\r\n            }\r\n\r\n            return{...state,\r\n                questions:{\r\n                    A:[...state.questions.A,\r\n                    ...action.questions.A],\r\n                    B:[...state.questions.B,\r\n                    ...action.questions.B]\r\n                },\r\n                result:(+state.result)+(+res),\r\n                maxResult:state.maxResult+maxResult\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SetResultType={\r\n    type:typeof SET_RESULT\r\n    questions:QuestionsType\r\n    isToZero:boolean\r\n}\r\nexport  const setResult=(questions:QuestionsType,isToZero:boolean=false):SetResultType=>{\r\n    return{\r\n        type:SET_RESULT,\r\n        questions,isToZero\r\n    }\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { getQuestions, getRandomQuestions, getVariant } from \"../../DAL/Api\";\r\nimport { CategoryType, NumberType, QuestionType } from \"../../Types/Types\";\r\n\r\nconst SET_VARIANT:\"egeVariantReducer/SET_VARIANT\"=\"egeVariantReducer/SET_VARIANT\"\r\n\r\nlet curNumber:NumberType={\r\n    title:\"Par\" ,\r\n    id:1,\r\n    categorys:[],\r\n    number:1,\r\n    points:1,\r\n    benchmarks:[]\r\n} \r\n\r\ntype ModeType=\"train\" | \"variant\"\r\nconst initialState={\r\n    questions:[] as QuestionType[],\r\n    numberVariant:null as number | null,\r\n    mode:\"variant\" as ModeType,\r\n    page:1 as number,\r\n    //null - first new, true - first easy , false - first hard\r\n    sort:null as null | boolean,\r\n    totalCount:0 as number\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetPageType\r\n\r\nexport const egeVariantReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_VARIANT:\r\n            return{...state,\r\n            questions:[...action.questions],\r\n            numberVariant:action.numberVariant,\r\n            mode:action.mode,\r\n            page:action.page,\r\n            sort:action.sort,\r\n            totalCount:action.totalCount\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SetPageType={\r\n    type:typeof SET_VARIANT\r\n    questions:QuestionType[]\r\n    numberVariant:number | null\r\n    mode:ModeType\r\n    page:number\r\n    sort:null | boolean\r\n    totalCount:number\r\n}\r\nconst setVariant=(questions:QuestionType[],numberVariant:number | null,mode:ModeType,page=1,sort=null as null|boolean,totalCount=0):SetPageType=>{\r\n    return{\r\n        type:SET_VARIANT,\r\n        questions,numberVariant,\r\n        mode,page,sort,\r\n        totalCount\r\n    }\r\n}\r\nexport type ChangeType={\r\n    number:NumberType\r\n    categorys:CategoryType[]\r\n    count:number\r\n}\r\nexport const setTrainQuestionThunk=(category:number,page=1,sortByDifficult=null as boolean | null)=>async (dispatch:Dispatch)=>{\r\n    let res = await getQuestions(undefined,category,page,5,sortByDifficult)\r\n\r\n    dispatch(setVariant(res.data.results,null,\"train\",page,sortByDifficult,res.data.count))\r\n}\r\nexport const setQuestionThunk=(filters:ChangeType[])=>async (dispatch:Dispatch)=>{\r\n    let result:QuestionType[]=[]\r\n    for(let c=0;c<filters.length;c++){\r\n        let ans:QuestionType[]=[];\r\n        if  (filters[c].number.categorys.length===filters[c].categorys.length){\r\n            ans = (await getRandomQuestions(filters[c].number.number,0,1,filters[c].count)).data.results\r\n        }\r\n        else{\r\n            let tryed=Math.floor(filters[c].count/filters[c].categorys.length)\r\n            let ost=filters[c].count%filters[c].categorys.length\r\n            for(let i=0;i<filters[c].categorys.length;i++){\r\n                let a=(await getRandomQuestions(filters[c].number.number,filters[c].categorys[i].id,1,tryed)).data.results\r\n                ans=[...ans,...a]\r\n            }\r\n            if(ost!==0){\r\n                let r=Math.round(Math.random()*(filters[c].categorys.length-1))\r\n                let a=(await getRandomQuestions(filters[c].number.number,filters[c].categorys[r].id,1,ost)).data.results\r\n                ans=[...ans,...a]\r\n            }\r\n        }\r\n        result=[...result,...ans]\r\n    }\r\n    dispatch(setVariant(result,null,\"variant\"))\r\n}\r\nexport const setVariantThunk=(numberVariant:number)=>async (dispatch:Dispatch)=>{\r\n    let response = await getVariant(numberVariant)\r\n\r\n    dispatch(setVariant(response.data.questions,numberVariant,\"variant\"))\r\n}\r\n","import { QuestionType } from \"../../Types/Types\";\r\n\r\n\r\nconst SET_RESULT:\"preResultReducer/SET_RESULT\"=\"preResultReducer/SET_RESULT\"\r\n\r\nconst initialState={\r\n    questions:[] as QuestionType[]\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetResultType\r\n\r\nexport const preResultReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_RESULT:\r\n            return{...state,questions:[...action.questions]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SetResultType={\r\n    type:typeof SET_RESULT\r\n    questions:QuestionType[]\r\n}\r\nexport  const setPreResult=(questions:QuestionType[]):SetResultType=>{\r\n    return{\r\n        type:SET_RESULT,\r\n        questions\r\n    }\r\n}","import { Dispatch } from \"redux\"\r\nimport { getQuestion } from \"../../DAL/Api\"\r\nimport { BenchmarkType, CategoryType, NumberType, QuestionType } from \"../../Types/Types\"\r\n\r\nconst SET_QUESTION:\"singleQuestionReducer/SET_QUESTION\"=\"singleQuestionReducer/SET_QUESTION\"\r\n\r\nconst initialState={\r\n    id:0 as number,\r\n    number:{\r\n        id:0,\r\n        categorys:[] as CategoryType[],\r\n        title:\"\" ,\r\n        number:0,\r\n        points:0,\r\n        benchmarks:[] as BenchmarkType[]\r\n    } as NumberType,\r\n    categorys:{\r\n        id:0,\r\n        title:\"\"\r\n    } as CategoryType,\r\n    difficult:0 as number,\r\n    introduction:\"\" as string,\r\n    firstAsk:\"\" as string,\r\n    secondAsk:\"\" as string,\r\n    thirdAsk:\"\" as string,\r\n    imgForAsk:\"\" as string,\r\n\r\n    imgForAns:\"\" as string,\r\n    fistInstruction:\"\" as string,\r\n    secondInstuction:\"\" as string,\r\n    thirdIntroduction:\"\" as string,\r\n\r\n    firstAnswer:\"\" as string,\r\n    secondAnwer:\"\" as string,\r\n    thirdAnswer:\"\" as string,\r\n\r\n    addition:\"\" as string,\r\n    source:\"\" as string,\r\n    source_link:\"\" as string   \r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetQuestionType\r\n\r\nexport const singleQuestionReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_QUESTION:\r\n            return{\r\n                ...state,...action.question\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SetQuestionType={\r\n    type:typeof SET_QUESTION\r\n    question:QuestionType\r\n}\r\nexport const setQuestion=(question:QuestionType):SetQuestionType=>{\r\n    return{\r\n        type:SET_QUESTION,\r\n        question\r\n    }\r\n}\r\nexport const setQuestionThunk=(id:number)=>async (dispatch:Dispatch)=>{\r\n    let response=await getQuestion(id)\r\n\r\n    dispatch(setQuestion(response.data))\r\n}","import { MaterialType } from \"../../Types/Types\";\r\nimport { getMaterial } from \"../../DAL/Api\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nconst SET_MATERIAL:\"materialReducer/SET_MATERIAL\"=\"materialReducer/SET_MATERIAL\"\r\n\r\n\r\nlet initialState={\r\n  id:0 as number,\r\n  title:\"\" as string,\r\n  text:\"\" as string,\r\n  imgMaterial:\"\" as string\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetMaterialType\r\n\r\nexport const materialReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n  switch (action.type) {\r\n    case SET_MATERIAL:\r\n      return{\r\n        ...action.material\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype SetMaterialType={\r\n  type:typeof SET_MATERIAL\r\n  material:MaterialType\r\n}\r\nconst setMaterial=(material:MaterialType):SetMaterialType=>{\r\n  return{\r\n    type:SET_MATERIAL,\r\n    material\r\n  }\r\n}\r\nexport const setMaterialThunk=(id:number)=>async (dispatch:Dispatch)=>{\r\n  let response=await getMaterial(id)\r\n\r\n  dispatch(setMaterial(response.data))\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { egeChoiceReducer } from \"./Reducers/egeChoiceReducer\";\r\nimport { egeResultReducer } from \"./Reducers/egeResultReducer\";\r\nimport { egeVariantReducer } from \"./Reducers/egeVariantReducer\";\r\nimport { preResultReducer } from \"./Reducers/preResultReducer\";\r\nimport { singleQuestionReducer } from \"./Reducers/singleQuestionReducer\";\r\nimport { materialReducer } from \"./Reducers/materialReducer\";\r\nimport { headerReducer } from \"./Reducers/headerReducer\";\r\n\r\n\r\nconst rootReducer=combineReducers({\r\n    mainPage:egeChoiceReducer,\r\n    resultPage:egeResultReducer,\r\n    variantPage:egeVariantReducer,\r\n    preResultPage:preResultReducer,\r\n    singleQuestionPage:singleQuestionReducer,\r\n    material:materialReducer,\r\n    header:headerReducer\r\n})\r\ntype RootReducerType=typeof rootReducer\r\nexport type AppStateType=ReturnType<RootReducerType>\r\n\r\nexport const store=createStore(rootReducer,applyMiddleware(thunkMiddleware))\r\n","import { AppStateType } from \"../store\";\r\n\r\n\r\nexport const numbersSelector=(state:AppStateType)=>{\r\n    return state.mainPage.numbers\r\n}\r\nexport const pageNumberSelector=(state:AppStateType)=>{\r\n    return state.mainPage.pageVariant\r\n}\r\nexport const variantsSelector=(state:AppStateType)=>{\r\n    return state.mainPage.variants\r\n}\r\nexport const totalCountSelector=(state:AppStateType)=>{\r\n    return state.mainPage.totalCount\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Button, ButtonGroup } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { VariantType } from \"../../Types/Types\"\r\n\r\n\r\ntype PropsType={\r\n    totalCount:number\r\n    page:number\r\n    pS:number//portion Size\r\n    link?:string\r\n    behavior:boolean //true - first litle, false - first biggest \r\n}\r\nexport const Pagination:React.FC<PropsType>=({page,pS,totalCount,...props})=>{\r\n\r\n    let history=useHistory()\r\n    let onSubmit=(e:any)=>{\r\n        if(props.link==\"train\"){\r\n            const urlParams = new URLSearchParams(history.location.search);\r\n            let id=(urlParams.get('id'))\r\n            history.push({\r\n                pathname:\"train\",\r\n                search:`id=${id}&page=${e.target.innerText}`\r\n            })\r\n        }else{\r\n        history.push({\r\n            pathname:props.link,\r\n            search:`?id=${e.target.innerText}`\r\n        })}\r\n    }\r\n\r\n    let [pN,setPn]=useState(1)//pageNumber\r\n\r\n    let onNext=()=>{\r\n        setPn((pN)=>(pN+1))\r\n    }\r\n    let onPrev=()=>{\r\n        setPn((pN)=>(pN-1))\r\n    }\r\n\r\n    let buttons=[] as any\r\n    if(!props.behavior){\r\n        for(let i=0;i<pS;i++){\r\n            buttons.push(totalCount>(pN-1)*pS+i &&\r\n                <Button variant=\"light\" onClick={onSubmit} active={page==totalCount-((pN-1)*pS)-i}>\r\n                    {totalCount-((pN-1)*pS)-i}\r\n                </Button>)\r\n        }\r\n    }else{\r\n        for(let i=1;i<=pS;i++){\r\n            buttons.push(totalCount>=(pN-1)*pS+i &&\r\n                <Button variant=\"light\" onClick={onSubmit} active={page==((pN-1)*pS)+i}>\r\n                    {((pN-1)*pS)+i}\r\n                </Button>)\r\n        }\r\n    }\r\n\r\n\r\n    return<div>\r\n        <ButtonGroup size={\"lg\"} aria-label=\"Basic example\">\r\n            {pN>1 && \r\n            <Button variant=\"success\" onClick={onPrev}>{\"<\"}</Button>}\r\n\r\n            {buttons}\r\n\r\n            {totalCount-(pN)*pS>0 &&\r\n            <Button variant=\"success\" onClick={onNext}>{\">\"}</Button>}\r\n        \r\n        </ButtonGroup>\r\n    </div>\r\n}","import { Field } from \"formik\"\r\nimport React, { useState } from \"react\"\r\nimport { ChangeEvent } from \"react\"\r\nimport { Button, ButtonGroup, OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { NumberType } from \"../../../Types/Types\"\r\nimport parse from 'html-react-parser'\r\n\r\n\r\ntype valueCategoryType = {\r\n    name: string\r\n    value: boolean\r\n}\r\ntype PropsType = {\r\n    name: string\r\n    value: number\r\n    handleChange: (e: string | ChangeEvent<any>) => void\r\n    valuesCategory: valueCategoryType[]\r\n}\r\ntype PropsQuestionType = NumberType & PropsType\r\nexport const Number: React.FC<PropsQuestionType> = (props) => {\r\n    const style = {\r\n        borderBottom: \"silver 1px solid\",\r\n        borderRadius: \"10px\",\r\n        paddingBottom: \"0em\",\r\n        marginTop: \"1em\",\r\n        paddingLeft: \"0.7em\"\r\n    }\r\n    let [editMode, setEditMode] = useState(false) //false - hide , true - show detail\r\n    return <div style={style}>\r\n        <div className=\"row\">\r\n            <div className=\"col-7 pr-4 pt-2\">\r\n\r\n                <h5 className=\"d-flex\">\r\n                    <div className=\"mx-1 mb-1\">\r\n                        <Button variant=\"light\" size=\"sm\" onClick={() => setEditMode(!editMode)}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-list\" viewBox=\"0 0 16 16\">\r\n                                <path fill-rule=\"evenodd\" d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\" />\r\n                            </svg>\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"center\">\r\n                    {props.number}.{parse(props.title)}\r\n                    </div>\r\n                </h5>\r\n            </div>\r\n            <div className=\"col-5 end yCenter\">\r\n                <div className=\"btn-group\">\r\n                    <button disabled={props.value <= 0}\r\n                        style={{ maxHeight: \"2.5em\" }}\r\n                        className=\"btn btn-success\"\r\n                        name={props.name} value={props.value}\r\n                        onClick={(e) => {\r\n                            //@ts-ignore\r\n                            e.target.value = +(props.value) || props.value == 0 ? +(props.value) - 1 : 0\r\n                            props.handleChange(e)\r\n                        }} type=\"reset\"\r\n                    >-</button>\r\n\r\n                    <input\r\n                        style={{ width: \"2.5em\", maxHeight: \"2.5em\", backgroundColor: \"#F8F9FA\", border: 'none', outline: 'none', textAlign: 'center' }}\r\n                        value={props.value}\r\n                        name={props.name}\r\n                        onChange={(e) => {\r\n                            e.target.value = (+(e.target.value) || e.target.value == '0') ? e.target.value : '0'\r\n                            if (+(e.target.value) > 10) {\r\n                                e.target.value = '10'\r\n                            }\r\n                            if (e.target.value.length > 1 && e.target.value[0] == \"0\") {\r\n                                e.target.value = e.target.value.slice(1,)\r\n                            }\r\n                            props.handleChange(e)\r\n                        }} />\r\n\r\n                    <button className=\"btn btn-success\"\r\n                        style={{ maxHeight: \"2.5em\" }}\r\n                        disabled={props.value >= 10}\r\n                        name={props.name}\r\n                        onClick={(e) => {\r\n                            //@ts-ignore\r\n                            e.target.value = +(props.value) || props.value == 0 ? +(props.value) + 1 : 0\r\n                            props.handleChange(e)\r\n                        }} type=\"reset\"\r\n                        value={props.value}>\r\n                        +\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {editMode &&\r\n            <div className=\"my-1\">\r\n                {props.categorys.map((c, index) => <div className=\"mt-1 row\">\r\n                    <div className=\"col-10 d-flex\">\r\n                        <div>\r\n                        {c.material ?\r\n                        <OverlayTrigger\r\n                        key={\"bottom-have\"}\r\n                        placement={\"bottom\"}\r\n                        overlay={\r\n                          <Tooltip id={`tooltip-${\"yes\"}`}>\r\n                            К этому заданию есть материалы.\r\n                          </Tooltip>\r\n                        }\r\n                      >\r\n                        <Button variant=\"light\">\r\n                        <NavLink to={`material?id=${c.material.id}`} className=\"\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                            <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\r\n                          </svg>\r\n                        </NavLink> \r\n                        </Button>\r\n                      </OverlayTrigger>\r\n                        :\r\n                        \r\n                        <OverlayTrigger\r\n                        key={\"bottom-not-have\"}\r\n                        placement={\"bottom\"}\r\n                        overlay={\r\n                          <Tooltip id={`tooltip-${\"not\"}`}>\r\n                            К этому заданию еще нет материалов.\r\n                          </Tooltip>\r\n                        }\r\n                      >\r\n                        <Button variant=\"light\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                            <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\r\n                          </svg> \r\n                        </Button>\r\n                      </OverlayTrigger>}\r\n                        </div>\r\n                        <div className=\"center\">\r\n                            <label htmlFor={`${c.id}`}>{parse(c.title)}</label> - <NavLink to={`train?id=${c.id}&page=1`}>Посмотреть все</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-2 center\"> <Field\r\n                        type=\"checkbox\"\r\n                        name={props.valuesCategory[index].name}\r\n                        onChange={props.handleChange}\r\n                        defaultChecked={props.valuesCategory[index].value}\r\n                        id={`${c.id}`}\r\n                    /></div>\r\n                </div>)}\r\n            </div>}\r\n    </div>\r\n}\r\n","import { Formik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useRef } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { ChangeType } from \"../../../BLL/Reducers/egeVariantReducer\"\r\nimport { NumberType } from \"../../../Types/Types\"\r\nimport { Number } from \"./NumberUI\"\r\n\r\n\r\ntype PropsType={\r\n    changeItems:NumberType[]\r\n    submitForm:(filters:ChangeType[])=>void\r\n}\r\n\r\nexport let FormChoiceWithFormik:React.FC<PropsType>=(props)=>{\r\n\r\n    const history=useHistory()\r\n    const dispatch=useDispatch()\r\n    const toObj = (arr:Array<NumberType>) => arr.reduce((obj, el) => ({ ...obj, ...el }));\r\n\r\n    let objCategorys={}\r\n    let obj = {};\r\n    props.changeItems.forEach((el) => {\r\n        let key='number'+String(el.number)\r\n        let object={} as any\r\n        object[key]=0\r\n        el.categorys.forEach(e=>{\r\n            let newCategory={} as any\r\n            let categoryKey='category'+String(e.id)+'number'+String(el.id)\r\n            newCategory[categoryKey]=true\r\n            Object.assign(objCategorys,newCategory)\r\n        })\r\n        Object.assign(obj,object);\r\n    });\r\n\r\n    return<Formik\r\n    enableReinitialize\r\n    initialValues={{...obj,...objCategorys}}\r\n    onSubmit={(values)=>{\r\n        let filters=[] as ChangeType[]\r\n        props.changeItems.forEach(c=>{\r\n            let myObj={\r\n                count:0,\r\n                number:c,\r\n                categorys:[]\r\n            } as ChangeType\r\n            let key='number'+String(c.number)\r\n            //@ts-ignore\r\n            myObj.count=values[key]\r\n            c.categorys.forEach(e=>{\r\n                //@ts-ignore\r\n                if(values['category'+String(e.id)+'number'+String(c.id)]){\r\n                    myObj.categorys.push(...c.categorys.filter(f=>f.id==e.id))\r\n                }\r\n            })\r\n            if(myObj.count>0 && myObj.count<=10){\r\n                filters.push(myObj)\r\n            }else if(myObj.count>10){\r\n                myObj.count=10\r\n                filters.push(myObj)\r\n            }\r\n        })\r\n        history.push({\r\n            pathname:'variant',\r\n            search:'id=0'\r\n        })\r\n        dispatch(props.submitForm(filters))\r\n    }}>\r\n        {({\r\n            handleSubmit,\r\n            handleChange,\r\n            values\r\n        })=>{\r\n            let myNumbers=props.changeItems.map(c=>\r\n                <Number {...c} id={c.id} title={c.title} name={'number'+String(c.number)}\r\n                categorys={c.categorys} number={c.number} points={c.points}\r\n                benchmarks={c.benchmarks}\r\n                //@ts-ignore\r\n                value={values['number'+String(c.number)]}\r\n                valuesCategory={c.categorys.map(cat=>{\r\n                    return{name:('category'+String(cat.id)+'number'+String(c.id)),\r\n                    //@ts-ignore\r\n                    value:values['category'+String(cat.id)+'number'+String(c.id)]}})}\r\n                handleChange={handleChange}/>)\r\n            return<form onSubmit={handleSubmit}>\r\n                {myNumbers}\r\n                <div className=\"center mt-2\">\r\n                    <button className=\"btn btn-success\"\r\n                    type=\"submit\" style={{fontSize:\"1.1em\"}}>\r\n                        Начать тестирование\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }}\r\n    </Formik>\r\n}\r\n","import { AppStateType } from \"../store\";\r\n\r\n\r\nexport const questionsSelector=(state:AppStateType)=>{\r\n    return state.resultPage.questions\r\n}\r\nexport const resultSelector=(state:AppStateType)=>{\r\n    return state.resultPage.result\r\n}\r\nexport const maxResultSelector=(state:AppStateType)=>{\r\n    return state.resultPage.maxResult\r\n}","import { NavLink } from \"react-router-dom\"\r\nimport { QuestionTypeA, QuestionTypeB } from \"../../../BLL/Reducers/egeResultReducer\"\r\n\r\n\r\n\r\ntype PropsType={\r\n    id:number\r\n    rightAns?:string\r\n    anotherAns?:string\r\n    numberQuestion:number\r\n    points?:number\r\n    maxPoints?:number\r\n}\r\nexport const BarResult:React.FC<PropsType>=(props)=>{\r\n    const checkAnswer=(anotherAns:string,rightAns:string):string=>{\r\n        if(!anotherAns.trim()){\r\n            return \"\"\r\n        }\r\n        if(rightAns.split('!').length>1){\r\n            let countRightAns=0\r\n            rightAns.split('!').forEach((r,index)=>{\r\n                if(r===anotherAns[index]){\r\n                    countRightAns++\r\n                }\r\n            })\r\n            if(countRightAns===rightAns.split('!').length){\r\n                return \"mySuccess\"\r\n            }else if(countRightAns>0){\r\n                return \"myWarning\"\r\n            }else{\r\n                return \"myDanger\"\r\n            }\r\n        }else if(anotherAns===rightAns){\r\n            return \"mySuccess\"\r\n        }else{\r\n            return \"myDanger\"\r\n        }\r\n    }\r\n    if(props.maxPoints){\r\n        return<tr>\r\n            <td className=\"center\">\r\n                {props.numberQuestion}\r\n            </td>\r\n            <td className=\"center\">\r\n                <NavLink to={`solveQuestion?id=${props.id}`}>\r\n                    {props.id}\r\n                </NavLink>\r\n            </td>\r\n            <td className={props.maxPoints==props.points ?\r\n             \"mySuccess center text-white\" :\r\n              props.points && props.points>0 ?\r\n              \"myWarning center text-white\" :\r\n              \"myDanger center text-white\"} >\r\n                {props.points}\r\n            </td>\r\n            <td className=\"center\">\r\n                {props.maxPoints}\r\n            </td>\r\n        </tr>\r\n    }\r\n    return<tr>\r\n        <td className=\"center\">\r\n            {props.numberQuestion}\r\n        </td>\r\n        <td className=\"center\">\r\n            <NavLink to={`solveQuestion?id=${props.id}`}>\r\n                {props.id}\r\n            </NavLink>\r\n        </td>\r\n        <td className={\"center text-white \"+checkAnswer(\r\n            props.anotherAns ?\r\n            props.anotherAns.toLowerCase() : \"\" ,\r\n            props.rightAns ?\r\n            props.rightAns.toLowerCase() : \"\")}>\r\n            {props.anotherAns?.toLowerCase()}\r\n        </td>\r\n        <td className=\"center\">\r\n            {props.rightAns && props.rightAns.split(\"!\").length>1 ?\r\n                props.rightAns?.split(\"!\").map(r=>r) :\r\n                props.rightAns?.toLowerCase()\r\n            }\r\n        </td>\r\n    </tr>\r\n}\r\n","import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { QuestionTypeA, QuestionTypeB, setResult } from \"../../../BLL/Reducers/egeResultReducer\"\r\nimport { maxResultSelector, questionsSelector, resultSelector, } from \"../../../BLL/Selectors/egeResultSelector\"\r\nimport { BarResult } from \"./BarResult\"\r\n\r\n\r\n\r\ntype PropsType = {}\r\nexport const ResultPage: React.FC<PropsType> = (props) => {\r\n\r\n    let results = useSelector(questionsSelector)\r\n    let result = useSelector(resultSelector)\r\n    let maxResult = useSelector(maxResultSelector)\r\n    const dispatch = useDispatch()\r\n    const history=useHistory()\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            //To zero all results\r\n            dispatch(setResult({ A: [], B: [] }, true))\r\n        })\r\n    }, [])\r\n\r\n    let questionsA=results.A.map(a=><BarResult  {...a}/>)\r\n    let questionsB=results.B.map(b=><BarResult {...b}/>)\r\n\r\n    const onClick=()=>{\r\n        history.push({\r\n            pathname:'/'\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        <h3 className=\"center\">\r\n            Результаты\r\n        </h3>\r\n        <div className=\"row mx-2\">\r\n            {questionsA.length >0 &&\r\n            <div className={`mt-1 ${questionsB.length>0 ? 'col-md-6' : 'col-md-12'}`}>\r\n                <h5 className=\"center\">Первая часть</h5>\r\n                <table className=\"table border-success table-hovered\">\r\n                    <thead>\r\n                        <th className=\"center yCenter\">\r\n                            №\r\n                        </th>\r\n                        <th className=\"center yCenter\">\r\n                            #\r\n                        </th>\r\n                        <th className=\"center yCenter\">\r\n                            Ваш отвтет\r\n                        </th>\r\n                        <th className=\"center yCenter\">\r\n                            Правильный отвтет\r\n                        </th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {questionsA}\r\n                    </tbody>\r\n                </table>\r\n            </div>}\r\n            {questionsB.length >0 &&\r\n            <div className={`mt-1 ${questionsA.length>0 ? 'col-md-6' : 'col-md-12'}`}>\r\n                <h5 className=\"center\">Вторая часть</h5>\r\n                <table className=\"table border-success\">\r\n                    <thead>\r\n                        <th className=\"center yCenter\">\r\n                            №\r\n                        </th>\r\n                        <th className=\"center yCenter\">\r\n                            #\r\n                        </th>\r\n                        <th className=\"center yCenter\">\r\n                            Ваш балл\r\n                        </th>\r\n                        <th className=\"center yCenter\">\r\n                            Максимальный балл\r\n                        </th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {questionsB}\r\n                    </tbody>\r\n                </table>\r\n            </div>}\r\n        </div>\r\n        <div className=\"center row mt-1\">\r\n            <div className=\"col-md-3 mySuccess text-white px-1 rounded\">\r\n                Задание решено верно\r\n            </div>\r\n            <div className=\"col-md-3 myWarning text-white px-1 rounded\">\r\n                Задание частично решено\r\n            </div>\r\n            <div className=\"col-md-3 myDanger text-white px-1 rounded\">\r\n                Задание решено неверно\r\n            </div>\r\n            <div className=\"col-md-3 px-1 rounded\" style={{border:'1px silver solid'}}>\r\n                Задание было пропущено\r\n            </div>\r\n        </div>\r\n        <div className=\"text-center mt-1\">\r\n            Вы сделали работу на {Math.round((result/maxResult)*100)}%\r\n            правильно , то есть набрали {result} {result !==1 ? \"первичных\" :\"первичный\"} баллов ,\r\n            всего можно было набрать {maxResult}.\r\n        </div>\r\n        <div className=\"mt-1 center\">\r\n            <button className=\"btn btn-success\"\r\n            onClick={onClick}\r\n            style={{fontSize:\"1.2em\"}}>\r\n                На главную\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n","import { AppStateType } from \"../store\";\r\n\r\n\r\nexport const questionsVariantSelector=(state:AppStateType)=>{\r\n    return state.variantPage.questions\r\n}\r\nexport const numberVariantSelector=(state:AppStateType)=>{\r\n    return state.variantPage.numberVariant\r\n}\r\nexport const modeSelector=(state:AppStateType)=>{\r\n    return state.variantPage.mode\r\n}\r\nexport const pageVariantSelector=(state:AppStateType)=>{\r\n    return state.variantPage.page\r\n}\r\nexport const sortSelector=(state:AppStateType)=>{\r\n    return state.variantPage.sort\r\n}\r\nexport const totalCount=(state:AppStateType)=>{\r\n    return state.variantPage.totalCount\r\n}","import { ChangeEvent } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { numbersSelector } from \"../../../BLL/Selectors/egeChoiceSelector\"\r\nimport { QuestionType } from \"../../../Types/Types\"\r\nimport parse from \"html-react-parser\";\r\n\r\n\r\ntype AddPropsType={\r\n    name:string\r\n    value:string\r\n    onChange:(e: ChangeEvent<any>)=>void\r\n}\r\ntype PropsType=QuestionType & AddPropsType\r\n\r\nexport const VariantQuestion:React.FC<PropsType>=(props)=>{\r\n\r\n    let allNumbers=useSelector(numbersSelector)\r\n\r\n    return<div className=\"card mt-2\">\r\n        <div className=\"card-header\">\r\n            №{props.number.number}\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <div>\r\n            {parse(props.introduction)}\r\n            </div>\r\n            <div>\r\n                {props.secondAsk && \"a)\"}\r\n                {props.firstAsk && parse(props.firstAsk)}\r\n            </div>\r\n            <div>\r\n                {props.secondAsk && \"б)\"+parse(props.secondAsk)}\r\n            </div>\r\n            <div>\r\n                {props.thirdAsk && \"в)\"+parse(props.thirdAsk)}\r\n            </div>\r\n            <div>\r\n                {props.imgForAsk && <div className=\"center container\">\r\n                    <img className=\"img w-100 center\" src={props.imgForAsk} />\r\n                </div>}\r\n            </div>\r\n            {(props.number.points===1 || props.firstAnswer.split('!').length>1) ?\r\n            <div className=\"mt-1\">\r\n                <input\r\n                placeholder={'Ответ'}\r\n                className={\"form-control\"}\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                />\r\n            </div>:\r\n            <div className=\"text-secondary center mt-1\">\r\n                Задания с развернутым ответом\r\n                будут представлены вам для самопроверки\r\n                на следующей странице\r\n            </div>}\r\n        </div>\r\n    </div>\r\n}\r\n","import { Formik } from \"formik\"\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { QuestionTypeA, setResult } from \"../../../BLL/Reducers/egeResultReducer\"\r\nimport { setPreResult } from \"../../../BLL/Reducers/preResultReducer\"\r\nimport { questionsVariantSelector } from \"../../../BLL/Selectors/egeVariantSelector\"\r\nimport { AppStateType } from \"../../../BLL/store\"\r\nimport { QuestionType } from \"../../../Types/Types\"\r\nimport { VariantQuestion } from \"./VariantQuestion\"\r\n\r\n\r\ntype PropsType={\r\n    questionsRaw:QuestionType[]\r\n}\r\n\r\nexport const FormVariant:React.FC<PropsType>=(props)=>{\r\n   \r\n    let questionValues={}\r\n    props.questionsRaw.forEach(q=>{\r\n        let newQ:any={}\r\n        newQ['question'+String(q.id)]=\"\"\r\n        Object.assign(questionValues,newQ)\r\n    })\r\n\r\n    const dispatch=useDispatch()\r\n    let history=useHistory()\r\n\r\n    return<Formik\r\n    enableReinitialize\r\n    initialValues={{...questionValues}}\r\n    onSubmit={(values)=>{\r\n        \r\n        let questionsA:QuestionTypeA[]=[]\r\n        let questionsB:QuestionType[]=[]\r\n        props.questionsRaw.forEach(q=>{\r\n            if(q.number.points==1 || q.firstAnswer.split('!').length>1){\r\n            questionsA.push({\r\n                id:q.id,\r\n                rightAns:q.firstAnswer,\r\n                numberQuestion:q.number.number,\r\n                //@ts-ignore\r\n                anotherAns:values[`question${q.id}`]\r\n            })}else{\r\n                questionsB.push(q)\r\n            }\r\n        })\r\n\r\n        dispatch(setPreResult(questionsB))\r\n        dispatch(setResult({\r\n            A:[...questionsA],\r\n            B:[]\r\n        }))\r\n        if(questionsB.length>0){\r\n            history.push({\r\n                pathname:'preResult'\r\n            })\r\n        }else{\r\n            history.push({\r\n                pathname:'result'\r\n            })\r\n        }\r\n    }}>\r\n        {({\r\n            handleSubmit,\r\n            values,\r\n            handleChange\r\n        })=>{\r\n            let questionUIVariant:Array<any>=props.questionsRaw.map(q=>{return <VariantQuestion \r\n                //@ts-ignore\r\n                {...q} name={`question${q.id}`} value={values[`question${q.id}`]}\r\n                onChange={handleChange} />})\r\n            return<form onSubmit={handleSubmit}>\r\n                {questionUIVariant}\r\n                <div className=\"center mt-1\">\r\n                    <button type=\"submit\" \r\n                    className=\"btn btn-success\">\r\n                        <span style={{fontSize:\"1.2em\"}}>\r\n                            Закончить работу\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        }}\r\n    </Formik>\r\n}","import { NavLink } from \"react-router-dom\"\r\nimport { QuestionType } from \"../../../Types/Types\"\r\nimport React,{ useState } from \"react\";\r\nimport parse from \"html-react-parser\";\r\n\r\ntype OwnPropsType={}\r\ntype PropsType=OwnPropsType & QuestionType\r\n\r\nexport const TrainQuestion:React.FC<PropsType>=(props)=>{\r\n\r\n    let [showAnswer,setShow]=useState(false)\r\n\r\n    return<div  className=\"card mt-2\">\r\n        <div className=\"card-header\">\r\n            #<NavLink to={`solveQuestion?id=${props.id}`}>\r\n                {props.id}\r\n            </NavLink> -  {props.number.number}\r\n            <div className=\"right\">\r\n                Сложность {props.difficult}/10\r\n            </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <div>\r\n                {props.introduction && parse(props.introduction)}\r\n            </div>\r\n            <div>\r\n                {props.secondAsk && \"a)\"}{parse(props.firstAsk)}\r\n            </div>\r\n            <div>\r\n                {props.secondAsk && `б)${parse(props.secondAsk)}`}\r\n            </div>\r\n            <div>\r\n                {props.thirdAsk && `в)${parse(props.thirdAsk)}`}\r\n            </div>\r\n            <div>\r\n                {props.imgForAsk && <div className=\"container center\">\r\n                <img className=\"img w-100 center\" src={props.imgForAsk}/>\r\n                </div>}\r\n            </div>\r\n            <div>\r\n                {showAnswer && <div className=\"mt-2\">\r\n                    <h3 className=\"text-success\">Решение </h3>\r\n                    <div>\r\n                        {props.secondInstuction && \"a)\"}{parse(props.fistInstruction)}\r\n                    </div>\r\n                    <div>\r\n                        {props.secondInstuction && 'б)'+`${parse(props.secondInstuction)}`}\r\n                    </div>\r\n                    <div>\r\n                        {props.thirdIntroduction && 'в)'+`${parse(props.thirdIntroduction)}`}\r\n                    </div>\r\n                    <div>\r\n                        {props.imgForAns && <div className=\"center container\">\r\n                            <img className=\"img w-100 center\" src={props.imgForAns} />\r\n                        </div>}\r\n                    </div>\r\n                    <div>\r\n                        <span style={{fontSize:\"1.2em\"}}>Ответ:</span> {props.secondAnwer && 'а)'}{parse(props.firstAnswer)}\r\n                        {props.secondAnwer && `, б)${parse(props.secondAnwer)}`}\r\n                        {props.thirdAnswer && `, в)${parse(props.thirdAnswer)}`}\r\n                    </div>\r\n                    {props.addition && <div className=\"mt-2 text-secondary\">\r\n                        <h4>Примечание</h4>\r\n                        <div>\r\n                            {parse(props.addition)}\r\n                        </div>\r\n                    </div>}\r\n                </div>}\r\n            </div>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n            {props.source &&\r\n            <div className=\"left pt-1\">\r\n            <a href={props.source_link} target={\"_blank\"}\r\n            className=\"Link\">\r\n                {parse(props.source)}\r\n            </a>\r\n            </div>\r\n            }\r\n            <div className=\"right\">\r\n                <button onClick={()=>setShow(!showAnswer)}\r\n                className=\"btn btn-light\">\r\n                    {\r\n                    showAnswer ?\r\n                    \"Скрыть решение\" :\r\n                    \"Показать решение\"\r\n                    }\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import { Formik } from \"formik\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { JsxElement } from \"typescript\"\r\nimport { QuestionTypeA, setResult } from \"../../../BLL/Reducers/egeResultReducer\"\r\nimport { setTrainQuestionThunk, setVariantThunk } from \"../../../BLL/Reducers/egeVariantReducer\"\r\nimport { setPreResult } from \"../../../BLL/Reducers/preResultReducer\"\r\nimport { resultSelector } from \"../../../BLL/Selectors/egeResultSelector\"\r\nimport { pageVariantSelector,modeSelector, questionsVariantSelector, totalCount } from \"../../../BLL/Selectors/egeVariantSelector\"\r\nimport { NumberType, QuestionType } from \"../../../Types/Types\"\r\nimport { Pagination } from \"../../Bricks/Pagination\"\r\nimport { FormVariant } from \"./FormVariant\"\r\nimport { TrainQuestion } from \"./TrainQuestion\"\r\nimport { VariantQuestion } from \"./VariantQuestion\"\r\n\r\n\r\n\r\n\r\ntype PropsType={}\r\n\r\nexport const EgeVariantPage:React.FC<PropsType>=(props)=>{\r\n    //null - first new,false - first hard , true - first easy\r\n    let [sort,setSort]=useState<string>(\"null\")\r\n    \r\n    let dispatch=useDispatch()\r\n    let history=useHistory()\r\n    let questionsRaw=useSelector(questionsVariantSelector)\r\n    let result=useSelector(resultSelector)\r\n    useEffect(()=>{\r\n        let myURL=new URLSearchParams(history.location.search)\r\n        switch(history.location.pathname){\r\n            case \"/train\":\r\n                //@ts-ignore\r\n                let category=myURL.get('id') ? +myURL.get('id') && +myURL.get('id') : 1\r\n                //@ts-ignore\r\n                let page=myURL.get('page') ? +myURL.get('page') && +myURL.get('page') : 1\r\n                \r\n                //parse string into boolean | null\r\n                let resultSort:boolean|null=null\r\n                switch(sort){\r\n                    case 'null':resultSort=null;break\r\n                    case 'false':resultSort=false;break\r\n                    case 'true':resultSort=true;break\r\n                }\r\n                //@ts-ignore\r\n                dispatch(setTrainQuestionThunk(category,page,resultSort))\r\n                break\r\n            case \"/variant\":\r\n                //@ts-ignore\r\n                let idVariant=myURL.get('id') ? +myURL.get('id') && +myURL.get('id') : 0\r\n                if(idVariant!=0){\r\n                    dispatch(setVariantThunk(idVariant))\r\n                }\r\n                break\r\n        }\r\n    },[history.location.search,sort])\r\n\r\n    let mode=useSelector(modeSelector)\r\n    let myTotalCount=useSelector(totalCount)\r\n    let page=useSelector(pageVariantSelector)\r\n\r\n    let questionUITest:Array<any>=questionsRaw.map(q=>{return <TrainQuestion {...q}/>})\r\n    \r\n\r\n    switch(mode){\r\n        case \"train\":\r\n        return<div>\r\n            <div className=\"row\">\r\n            <div className=\"col-md-4 center\">\r\n                <Pagination \r\n                page={page} totalCount={Math.ceil(myTotalCount/5)} pS={5} \r\n                behavior={true} link={\"train\"}/>\r\n            </div>\r\n            <div className=\"col-md-4 mt-2\"></div>\r\n            <div className=\"col-md-4 center\">\r\n                <select onChange={(e)=>setSort(e.target.value)}\r\n                className=\"form-control\">\r\n                    <option value={\"null\"}>\r\n                        Сначала новые\r\n                    </option>\r\n                    <option  value={\"true\"}>\r\n                        Сначала легкие\r\n                    </option>\r\n                    <option  value={\"false\"}>\r\n                        Сначала сложные\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            </div>\r\n            {questionUITest}\r\n        </div>\r\n        case \"variant\":\r\n            return<FormVariant questionsRaw={questionsRaw} />\r\n        default:\r\n            return<div>\r\n                Some error occured...\r\n            </div>\r\n    }\r\n}","import { AppStateType } from \"../store\";\r\n\r\n\r\nexport const questionsPreResultSelector=(state:AppStateType)=>{\r\n    return state.preResultPage.questions\r\n}","import { BenchmarkType } from \"../../../Types/Types\"\r\nimport parse from \"html-react-parser\";\r\n\r\ntype OwnPropsType={\r\n    index:number\r\n}\r\ntype PropsType=OwnPropsType & BenchmarkType\r\n\r\nexport const BenchmarkUI:React.FC<PropsType>=(props)=>{\r\n    return<tr>\r\n        <td className=\"center\">\r\n            {props.index}\r\n        </td>\r\n        <td className=\"center\">\r\n            {parse(props.title)}\r\n        </td>\r\n        <td className=\"center\">\r\n            {props.points}\r\n        </td>\r\n    </tr>\r\n}","import { ChangeEvent } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { QuestionType } from \"../../../Types/Types\"\r\nimport { BenchmarkUI } from \"./BenchmarkUI\"\r\nimport parse from \"html-react-parser\";\r\n\r\n\r\n\r\ntype OwnPropsType = {\r\n    value:number\r\n    name:string\r\n    onChange:(e: string | ChangeEvent<any>)=>void\r\n}\r\ntype PropsType = QuestionType & OwnPropsType\r\nexport const QuestionUIB: React.FC<PropsType> = (props) => {\r\n    //Fill options for form\r\n    let options=[]\r\n    for(let i=0;i<=props.number.points;i++){\r\n        options.push(<option value={i}>{i}</option>)\r\n    }\r\n    //Fill benchmarks\r\n    let benchmarks=[]\r\n    benchmarks=props.number.benchmarks.map((b,index)=><BenchmarkUI\r\n        index={index+1} {...b} />)\r\n\r\n    return <div className=\"mt-2\">\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                #<NavLink to={`solveQuestion?id=${props.id}`}>{props.id}</NavLink> - №{props.number.number}\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div>\r\n                    {props.introduction && parse(props.introduction)}\r\n                </div>\r\n                <div>\r\n                    {props.secondAsk && \"a)\"}{parse(props.firstAsk)}\r\n                </div>\r\n                <div>\r\n                    {props.secondAsk && `б)${parse(props.secondAsk)}`}\r\n                </div>\r\n                <div>\r\n                    {props.thirdAsk && `в)${parse(props.thirdAsk)}`}\r\n                </div>\r\n                <div>\r\n                    {props.imgForAsk && <div className=\"center container\">\r\n                        <img className=\"img w-100 center\" src={props.imgForAsk} />\r\n                    </div>}\r\n                </div>\r\n                <div>\r\n                    <div className=\"mt-2\">\r\n                        <h4 className=\"text-success\">Решение </h4>\r\n                        <div>\r\n                            {props.secondInstuction && \"a)\"}{parse(props.fistInstruction)}\r\n                        </div>\r\n                        <div>\r\n                            {props.secondInstuction && 'б)' + `${parse(props.secondInstuction)}`}\r\n                        </div>\r\n                        <div>\r\n                            {props.thirdIntroduction && 'в)' + `${parse(props.thirdIntroduction)}`}\r\n                        </div>\r\n                        <div>\r\n                            {props.imgForAns && <div className=\"center container\">\r\n                                <img className=\"img w-100 center\" src={props.imgForAns} />\r\n                            </div>}\r\n                        </div>\r\n                        <div>\r\n                            <span style={{ fontSize: \"1.2em\" }}>Ответ:</span> {props.secondAnwer && 'а)'}{parse(props.firstAnswer)}\r\n                            {props.secondAnwer && `, б)${parse(props.secondAnwer)}`}\r\n                            {props.thirdAnswer && `, в)${parse(props.thirdAnswer)}`}\r\n                        </div>\r\n                        {props.addition && <div className=\"mt-2\">\r\n                            <h4>Примечание</h4>\r\n                            <div>\r\n                                {parse(props.addition)}\r\n                            </div>\r\n                        </div>}\r\n\r\n                        <div className=\"mt-1\">\r\n                            <h5>Критерии оценивания</h5>\r\n                            <table className=\"table border-success table-hovered\">\r\n                                <thead>\r\n                                    <tr >\r\n                                        <th className=\"center yCenter\">№</th>\r\n                                        <th className=\"center yCenter\">Условие</th>\r\n                                        <th className=\"center yCenter\">\r\n                                            Макс. кол-во баллов\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {benchmarks}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-1 d-flex\">\r\n                    Колличество баллов:\r\n                    <select onChange={props.onChange}\r\n                    className=\"form-control\"\r\n                    value={props.value} name={props.name}>\r\n                        {options}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import { Formik } from \"formik\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { QuestionTypeA, QuestionTypeB, setResult } from \"../../../BLL/Reducers/egeResultReducer\"\r\nimport { BenchmarkType, QuestionType } from \"../../../Types/Types\"\r\nimport { QuestionUIB } from \"./QuestionUIB\"\r\n\r\n\r\n\r\n\r\ntype PropsType={\r\n    questions:QuestionType[]\r\n}\r\nexport const PreResultForm:React.FC<PropsType>=(props)=>{\r\n    \r\n    const dispatch=useDispatch()\r\n    const history=useHistory()\r\n    //Create values\r\n    const myValues={}\r\n    props.questions.forEach(q=>{\r\n        let newObj={}\r\n        //@ts-ignorets\r\n        newObj[`question${q.id}`]=0\r\n        Object.assign(myValues,newObj)\r\n    })\r\n\r\n\r\n    return<Formik\r\n        initialValues={{...myValues}}\r\n        onSubmit={(values)=>{\r\n            let questions={\r\n                A:[],\r\n                B:[] as QuestionTypeB[]\r\n            }\r\n            \r\n            props.questions.forEach(q=>{\r\n              questions.B.push({\r\n                  id:q.id,\r\n                  maxPoints:q.number.points,\r\n                  numberQuestion:q.number.number,\r\n                  //@ts-ignore\r\n                  points:values[`question${q.id}`]\r\n              })  \r\n            })\r\n            dispatch(setResult(questions))\r\n            history.push({\r\n                pathname:'result'\r\n            })\r\n        }}>\r\n    {({\r\n        handleSubmit,\r\n        handleChange,\r\n        values\r\n    })=>{\r\n        const Benchmarks=props.questions.map(q=><QuestionUIB \r\n        {...q} name={`question${q.id}`} \r\n        //@ts-ignore\r\n        value={values[`question${q.id}`]}\r\n        onChange={handleChange}/>)\r\n        \r\n        return<form onSubmit={handleSubmit}>\r\n            {Benchmarks}\r\n            <div className=\"center\">\r\n            <button className=\"btn btn-success mt-1\" \r\n            style={{fontSize:'1.2em'}} type=\"submit\">\r\n                Закончить проверку\r\n            </button>\r\n            </div>\r\n        </form>\r\n    }}\r\n    </Formik>\r\n}","import { useSelector } from \"react-redux\"\r\nimport { questionsPreResultSelector } from \"../../../BLL/Selectors/preResultSelector\"\r\nimport { PreResultForm } from \"./PreResultForm\"\r\n\r\n\r\n\r\ntype PropsType={\r\n\r\n}\r\nexport const PreResultPage:React.FC<PropsType>=(props)=>{\r\n    \r\n    let questions=useSelector(questionsPreResultSelector)\r\n\r\n    return<div>\r\n        <h3>Вторая часть</h3>\r\n        <div>\r\n            <PreResultForm questions={questions} />            \r\n        </div>\r\n    </div>\r\n}","import { AppStateType } from \"../store\";\r\n\r\n\r\nexport const singleQuestionSelector=(state:AppStateType)=>{\r\n    return state.singleQuestionPage\r\n}","import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { setQuestion, setQuestionThunk } from \"../../../BLL/Reducers/singleQuestionReducer\"\r\nimport { singleQuestionSelector } from \"../../../BLL/Selectors/singleQuestionSelector\"\r\nimport { BenchmarkType, CategoryType, NumberType, QuestionType } from \"../../../Types/Types\"\r\nimport parse from 'html-react-parser'\r\n\r\n\r\ntype OwnPropsType={}\r\ntype PropsType=OwnPropsType\r\nexport const SingleQuestion:React.FC<PropsType>=(nativeProps)=>{\r\n\r\n    let props=useSelector(singleQuestionSelector)\r\n    let history=useHistory()\r\n    const dispatch=useDispatch()\r\n\r\n    useEffect(()=>{\r\n\r\n        const myURL=new URLSearchParams(history.location.search)\r\n\r\n        //@ts-ignore\r\n        let id=+myURL.get('id') //id string - parse to int\r\n        dispatch(setQuestionThunk(id))\r\n\r\n        //for zero question\r\n        return(()=>{\r\n            dispatch(setQuestion(zeroQuestion))\r\n        })\r\n    },[history.location.search])\r\n\r\n    let [showAnswer,setShow]=useState(false)\r\n\r\n    return<div  className=\"mt-2\">\r\n        <div className=\"\">\r\n        №{props.number.number} - #{props.id}\r\n            <div className=\"right\">\r\n                Сложность {props.difficult}/10\r\n            </div>\r\n        </div>\r\n        <div className=\"\">\r\n            <div>\r\n                {props.introduction && parse(props.introduction)}\r\n            </div>\r\n            <div>\r\n                {props.secondAsk && \"a)\"}{parse(props.firstAsk)}\r\n            </div>\r\n            <div>\r\n                {props.secondAsk && `б)${parse(props.secondAsk)}`}\r\n            </div>\r\n            <div>\r\n                {props.thirdAsk && `в)${parse(props.thirdAsk)}`}\r\n            </div>\r\n            <div>\r\n                {props.imgForAsk && <div className=\"center\">\r\n                <img className=\"img\" src={props.imgForAsk}/>\r\n                </div>}\r\n            </div>\r\n            <div>\r\n                {showAnswer && <div className=\"mt-2\">\r\n                    <h3 className=\"text-success\">Решение </h3>\r\n                    <div>\r\n                        {props.secondInstuction && \"a)\"}{parse(props.fistInstruction)}\r\n                    </div>\r\n                    <div>\r\n                        {props.secondInstuction && 'б)'+`${parse(props.secondInstuction)}`}\r\n                    </div>\r\n                    <div>\r\n                        {props.thirdIntroduction && 'в)'+`${parse(props.thirdIntroduction)}`}\r\n                    </div>\r\n                    <div>\r\n                        {props.imgForAns && <div className=\"center\">\r\n                            <img className=\"img\" src={props.imgForAns} />\r\n                        </div>}\r\n                    </div>\r\n                    <div>\r\n                        <span style={{fontSize:\"1.2em\"}}>Ответ:</span> {props.secondAnwer && 'а)'}{parse(props.firstAnswer)}\r\n                        {props.secondAnwer && `, б)${parse(props.secondAnwer)}`}\r\n                        {props.thirdAnswer && `, в)${parse(props.thirdAnswer)}`}\r\n                    </div>\r\n                    {props.addition && <div className=\"mt-2\">\r\n                        <h4>Примечание</h4>\r\n                        <div>\r\n                            {parse(props.addition)}\r\n                        </div>\r\n                    </div>}\r\n                </div>}\r\n            </div>\r\n        </div>\r\n        <div className=\"end\">\r\n            {props.source &&\r\n            <div className=\"left pt-1\">\r\n            <a href={props.source_link} target={\"_blank\"}\r\n            className=\"Link\">\r\n                {parse(props.source)}\r\n            </a>\r\n            </div>\r\n            }\r\n            <div className=\"right\">\r\n                <button onClick={()=>setShow(!showAnswer)}\r\n                className=\"btn btn-light\">\r\n                    {\r\n                    showAnswer ?\r\n                    \"Скрыть решение\" :\r\n                    \"Показать решение\"\r\n                    }\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet zeroQuestion={\r\n    id:0 as number,\r\n    number:{\r\n        id:0,\r\n        categorys:[] as CategoryType[],\r\n        title:\"\" ,\r\n        number:0,\r\n        points:0,\r\n        benchmarks:[] as BenchmarkType[]\r\n    } as NumberType,\r\n    categorys:{\r\n        id:0,\r\n        title:\"\"\r\n    } as CategoryType,\r\n    difficult:0 as number,\r\n    introduction:\"\" as string,\r\n    firstAsk:\"\" as string,\r\n    secondAsk:\"\" as string,\r\n    thirdAsk:\"\" as string,\r\n    imgForAsk:\"\" as string,\r\n\r\n    imgForAns:\"\" as string,\r\n    fistInstruction:\"\" as string,\r\n    secondInstuction:\"\" as string,\r\n    thirdIntroduction:\"\" as string,\r\n\r\n    firstAnswer:\"\" as string,\r\n    secondAnwer:\"\" as string,\r\n    thirdAnswer:\"\" as string,\r\n\r\n    addition:\"\" as string,\r\n    source:\"\" as string,\r\n    source_link:\"\" as string\r\n}\r\n","import { AppStateType } from \"../store\"\r\n\r\n\r\nexport const materialSelector=(state:AppStateType)=>{\r\n  return state.material\r\n}\r\n","\r\n\r\n\r\nimport { setMaterialThunk } from \"../../../BLL/Reducers/materialReducer\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { materialSelector } from \"../../../BLL/Selectors/materialSelector\";\r\nimport parse from \"html-react-parser\";\r\n\r\n\r\ntype PropsType={}\r\nexport const Material:React.FC<PropsType>=(props)=>{\r\n\r\n  let history=useHistory()\r\n  const dispatch=useDispatch()\r\n  let material=useSelector(materialSelector)\r\n\r\n  useEffect(()=>{\r\n      let myURL=new URLSearchParams(history.location.search)\r\n      //@ts-ignore\r\n      let id=+(myURL.get('id'))\r\n\r\n      dispatch(setMaterialThunk(id))\r\n  },[history.location.search])\r\n\r\n  return<div>\r\n    <h4>{parse(material.title)}</h4>\r\n    <div>\r\n      {parse(material.text)}\r\n    </div>\r\n    <div className=\"center\">\r\n      <img className=\"img w-100 round\"\r\n      src={material.imgMaterial}/>\r\n    </div>\r\n  </div>\r\n}\r\n","import { Route, Switch } from \"react-router\"\r\nimport { EgeChoice } from \"./EgeChoice/EgeChoice\";\r\nimport { ResultPage } from \"./EgeResult/ResultPage\";\r\nimport { EgeVariantPage } from \"./EgeVariant/EgeVariantPage\";\r\nimport { PreResultPage } from \"./preResult/PreResultPage\";\r\nimport { SingleQuestion } from \"./SingleQuestion/SingleQuestion\";\r\nimport { Material } from \"./Material/Material\";\r\n\r\n\r\nexport const Article=()=>{\r\n    return<div className=\"container mt-3 Article p-4\">\r\n        <Switch>\r\n            <Route path=\"/main\" render={()=><EgeChoice/>} />\r\n            <Route path=\"/train\" render={()=><EgeVariantPage/>}/>\r\n            <Route path=\"/variant\" render={()=><EgeVariantPage/>}/>\r\n            <Route path=\"/preResult\" render={()=><PreResultPage/>} />\r\n            <Route path=\"/result\" render={()=><ResultPage/>} />\r\n            <Route path=\"/solveQuestion\" render={()=><SingleQuestion/>}/>\r\n            <Route path=\"/material\" render={()=><Material/>} />\r\n            <Route path=\"*\" render={()=><EgeChoice/>} />\r\n        </Switch>\r\n    </div>\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Header } from \"./UI/Header/Header\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport {store} from \"./BLL/store\"\nimport { Article } from './UI/Article/root';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n    <Provider store={store}>\n    <div className=\"App\">\n      <Header />\n      <Article/>\n    </div>\n    </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}